<?php
/**
 * Created by PhpStorm.
 * User: maxim
 * Date: 18.01.19
 * Time: 13:44
 */

namespace shop\forms\manage\shop\product;

use shop\entities\shop\Category;
use shop\entities\shop\product\Product;
use yii\base\Model;
use yii\helpers\ArrayHelper;

class CategoryAssignmentForm extends Model
{
    public $main_category;
    public $additional_categories = [];

    public function __construct(Product $product = null, $config = [])
    {
       if($product){

           $this->main_category = $product->category_id;
           $this->additional_categories = ArrayHelper::getColumn($product->categoryAssignments, 'category_id');
       }


        parent::__construct($config);
    }

    /**
     * @return array
     */
    public function rules()
    {

        return [

            ['main_category', 'required'],
            ['main_category', 'integer'],
            ['additional_categories', 'each', 'rule' => ['integer']],


        ];

    }

    public function categoriesList()
    {

        return ArrayHelper::map(Category::find()->andWhere(['>', 'depth', 0])->orderBy('lft')->asArray()->all(), 'id', function(array $category)

        {
            return  ($category['depth'] > 1 ? str_repeat('- ', $category['depth'] - 1) . ' ' : '') . $category['name'];

        });


    }

    public function beforeValidate()
    {
        $this->additional_categories = array_filter((array)$this->additional_categories);

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }


}